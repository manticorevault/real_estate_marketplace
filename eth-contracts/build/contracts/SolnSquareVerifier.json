{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "verifierAddress",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "TransferOfOwnership",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "_isApprovedOrOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBaseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "internalType": "bool",
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "inputs",
          "type": "uint256[2]"
        }
      ],
      "name": "mintVerify",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferOfOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"_isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBaseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"inputs\",\"type\":\"uint256[2]\"}],\"name\":\"mintVerify\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"_isApprovedOrOwner(address,uint256)\":{\"details\":\"Returns whether the given spender can transfer a given token ID\",\"params\":{\"spender\":\"address of the spender to query\",\"tokenId\":\"uint256 ID of the token to be transferred\"},\"return\":\"bool whether the msg.sender is approved for the given token ID, is an operator of the owner, or is the owner of the token\"},\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID\",\"params\":{\"to\":\"address that is approved to transfer token\",\"tokenId\":\"uint256 that you would like to set approval for\"}},\"getApproved(uint256)\":{\"details\":\"Get approved address for a given token\",\"params\":{\"tokenId\":\"uint256 of the token to get approved address for\"},\"return\":\"address which can transfer the given token\"},\"getBaseTokenURI()\":{\"details\":\"Get the base URI of the token\",\"return\":\"String of the base URI of the token\"},\"getName()\":{\"details\":\"Get the name of the token\",\"return\":\"String of the name of the token\"},\"getOwner()\":{\"details\":\"Gets the address of the contract owner\",\"return\":\"address of the contract owner\"},\"getSymbol()\":{\"details\":\"Get the symbol of the token\",\"return\":\"String of the symbol of the token\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mint(address,uint256)\":{\"details\":\"Mint new token\",\"params\":{\"to\":\"address of the owner of the newly minted token\",\"tokenId\":\"id of the newly minted token\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"setPaused(bool)\":{\"details\":\"Pause or Unpause the contract\",\"params\":{\"status\":\"The pause state you would like the contract to be in\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Get the URI of the token\",\"params\":{\"tokenId\":\"as uint256 that you want the URI for\"},\"return\":\"String of the URI of the token\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferOwnership(address)\":{\"details\":\"Transfer ownership of the contract to a new owner\",\"params\":{\"newOwner\":\"address which you want to transfer contract ownership to\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/artur/Documents/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/artur/Documents/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x42dad7381da05fa4fcff6457d96c8ce6f1166fba25fd958791665b1d9b8ef2c5\",\"urls\":[\"bzz-raw://069f0e8a1efef8a61fb02bbd459407a95c79136486512eceaec85ba23aa1af59\",\"dweb:/ipfs/QmScBNRa7gpMzXLzUygmd7Gtisp32p462wAqyjP7sASFwq\"]},\"/home/artur/Documents/Blockchain-Capstone/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"/home/artur/Documents/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xaff52d2f5bd02a3782e702b45ef3fcec10001ae96fcaba462e94d1fb5c623475\",\"urls\":[\"bzz-raw://3fe459c485a981b1a011c540169a7fe8afa7001ea05584e7346c5624f78db774\",\"dweb:/ipfs/QmXvawFGqnhuKn1CZtiePAVQNDBAu2E6XxLM456yWs2SLJ\"]},\"/home/artur/Documents/Blockchain-Capstone/eth-contracts/contracts/Verifier.sol\":{\"keccak256\":\"0xb8ba16b747b01862c5599f254342f0d62ce764b2a58d9939eb1ea9f36d575c54\",\"urls\":[\"bzz-raw://4f49354c4a8a62cade04555e630c618c95a8ec19746d250122cb5e3ca29ded0d\",\"dweb:/ipfs/Qmf3vBisD3pY8MPGDVvmAxXLLrxa586YuUrKpx7RPhHUke\"]},\"/home/artur/Documents/Blockchain-Capstone/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"/home/artur/Documents/Blockchain-Capstone/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"/home/artur/Documents/Blockchain-Capstone/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"/home/artur/Documents/Blockchain-Capstone/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c80634cdc9549116100de578063a22cb46511610097578063c87b56dd11610071578063c87b56dd14610cbe578063e96adf2a14610d65578063e985e9c514610ef0578063f2fde38b14610f6c5761018e565b8063a22cb46514610ae6578063b88d4fde14610b36578063bdc32be014610c3b5761018e565b80634cdc9549146107b55780634f6ccce71461081b578063621e9ec01461085d5780636352211e146109d657806370a0823114610a44578063893d20e814610a9c5761018e565b806318160ddd1161014b5780632f745c59116101255780632f745c591461053b57806338bbfa501461059d57806340c10f19146106f957806342842e0e146107475761018e565b806318160ddd146103ea57806323b872dd1461040857806327dc297e146104765761018e565b806301ffc9a714610193578063081812fc146101f8578063095ea7b31461026657806315070401146102b457806316c38b3c1461033757806317d7de7c14610367575b600080fd5b6101de600480360360208110156101a957600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610fb0565b604051808215151515815260200191505060405180910390f35b6102246004803603602081101561020e57600080fd5b8101908080359060200190929190505050611018565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b26004803603604081101561027c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611055565b005b6102bc611238565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102fc5780820151818401526020810190506102e1565b50505050905090810190601f1680156103295780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103656004803603602081101561034d57600080fd5b810190808035151590602001909291905050506112da565b005b61036f6114e9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103af578082015181840152602081019050610394565b50505050905090810190601f1680156103dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103f261158b565b6040518082815260200191505060405180910390f35b6104746004803603606081101561041e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611598565b005b6105396004803603604081101561048c57600080fd5b8101908080359060200190929190803590602001906401000000008111156104b357600080fd5b8201836020820111156104c557600080fd5b803590602001918460018302840111640100000000831117156104e757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611624565b005b6105876004803603604081101561055157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611667565b6040518082815260200191505060405180910390f35b6106f7600480360360608110156105b357600080fd5b8101908080359060200190929190803590602001906401000000008111156105da57600080fd5b8201836020820111156105ec57600080fd5b8035906020019184600183028401116401000000008311171561060e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561067157600080fd5b82018360208201111561068357600080fd5b803590602001918460018302840111640100000000831117156106a557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611743565b005b6107456004803603604081101561070f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611748565b005b6107b36004803603606081101561075d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611887565b005b610801600480360360408110156107cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118a7565b604051808215151515815260200191505060405180910390f35b6108476004803603602081101561083157600080fd5b810190808035906020019092919050505061193c565b6040518082815260200191505060405180910390f35b6109bc600480360361014081101561087457600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610929578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906108d5565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192905050506119d9565b604051808215151515815260200191505060405180910390f35b610a02600480360360208110156109ec57600080fd5b8101908080359060200190929190505050611bd5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a8660048036036020811015610a5a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c12565b6040518082815260200191505060405180910390f35b610aa4611d04565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b3460048036036040811015610afc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611d2d565b005b610c3960048036036080811015610b4c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610bb357600080fd5b820183602082011115610bc557600080fd5b80359060200191846001830284011164010000000083111715610be757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611eb3565b005b610c43611f42565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c83578082015181840152602081019050610c68565b50505050905090810190601f168015610cb05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610cea60048036036020811015610cd457600080fd5b8101908080359060200190929190505050611fe4565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d2a578082015181840152602081019050610d0f565b50505050905090810190601f168015610d575780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610eee6004803603610180811015610d7c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610e5b578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610e07565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050612114565b005b610f5260048036036040811015610f0657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061234c565b604051808215151515815260200191505060405180910390f35b610fae60048036036020811015610f8257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123e0565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61105e81611bd5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806147d36029913960400191505060405180910390fd5b6110eb81611bd5565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061112a5750611129338361234c565b5b61117f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260498152602001806147406049913960600191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166111f283611bd5565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112d05780601f106112a5576101008083540402835291602001916112d0565b820191906000526020600020905b8154815290600101906020018083116112b357829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461137f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806147ae6025913960400191505060405180910390fd5b801515600060149054906101000a900460ff16151514156113eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260408152602001806147fc6040913960400191505060405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615611482577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16114e6565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115815780601f1061155657610100808354040283529160200191611581565b820191906000526020600020905b81548152906001019060200180831161156457829003601f168201915b5050505050905090565b6000600880549050905090565b6115a233826118a7565b611614576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4e6f7420417070726f766564206f72204f776e6572206f6620746f6b656e000081525060200191505060405180910390fd5b61161f8383836125d2565b505050565b611663828260006040519080825280601f01601f19166020018201604052801561165d5781602001600182028038833980820191505090505b50611743565b5050565b600061167283611c12565b82106116e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f496e76616c696420696e6465780000000000000000000000000000000000000081525060200191505060405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061173057fe5b9060005260206000200154905092915050565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806147ae6025913960400191505060405180910390fd5b600060149054906101000a900460ff1615611870576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f436f6e747261637420697320706175736564000000000000000000000000000081525060200191505060405180910390fd5b61187a82826125f6565b61188381612617565b5050565b6118a283838360405180602001604052806000815250611eb3565b505050565b6000806118b383611bd5565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061192257508373ffffffffffffffffffffffffffffffffffffffff1661190a84611018565b73ffffffffffffffffffffffffffffffffffffffff16145b806119335750611932818561234c565b5b91505092915050565b600061194661158b565b82106119ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f496e76616c696420696e6465780000000000000000000000000000000000000081525060200191505060405180910390fd5b600882815481106119c757fe5b90600052602060002001549050919050565b60006119e3614512565b6040518060400160405280876000600281106119fb57fe5b6020020151815260200187600160028110611a1257fe5b602002015181525081600001819052506040518060400160405280604051806040016040528088600060028110611a4557fe5b6020020151600060028110611a5657fe5b6020020151815260200188600060028110611a6d57fe5b6020020151600160028110611a7e57fe5b60200201518152508152602001604051806040016040528088600160028110611aa357fe5b6020020151600060028110611ab457fe5b6020020151815260200188600160028110611acb57fe5b6020020151600160028110611adc57fe5b60200201518152508152508160200181905250604051806040016040528085600060028110611b0757fe5b6020020151815260200185600160028110611b1e57fe5b6020020151815250816040018190525060606002604051908082528060200260200182016040528015611b605781602001602082028038833980820191505090505b50905060008090505b6002811015611ba857848160028110611b7e57fe5b6020020151828281518110611b8f57fe5b6020026020010181815250508080600101915050611b69565b506000611bb58284612768565b1415611bc657600192505050611bcd565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611cb6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c69642041646472657373000000000000000000000000000000000081525060200191505060405180910390fd5b611cfd600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206128da565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611db2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061485d6028913960400191505060405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611ebe848484611598565b611eca848484846128e8565b611f3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f546f6b656e206e6f74207265636569766564000000000000000000000000000081525060200191505060405180910390fd5b50505050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611fda5780601f10611faf57610100808354040283529160200191611fda565b820191906000526020600020905b815481529060010190602001808311611fbd57829003601f168201915b5050505050905090565b6060611fef82612ad1565b612061576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20646f6573206e6f7420657869737400000000000000000000000081525060200191505060405180910390fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121085780601f106120dd57610100808354040283529160200191612108565b820191906000526020600020905b8154815290600101906020018083116120eb57829003601f168201915b50505050509050919050565b6000848484846040516020018085600260200280838360005b8381101561214857808201518184015260208101905061212d565b505050509050018460026000925b8184101561219c5782846020020151600260200280838360005b8381101561218b578082015181840152602081019050612170565b505050509050019260010192612156565b9250505083600260200280838360005b838110156121c75780820151818401526020810190506121ac565b5050505090500182600260200280838360005b838110156121f55780820151818401526020810190506121da565b505050509050019450505050506040516020818303038152906040528051906020012090506015600082815260200190815260200160002060000160009054906101000a900460ff16156122b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f536f6c7574696f6e206973206e6f7420756e697175650000000000000000000081525060200191505060405180910390fd5b6122bd858585856119d9565b61232f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f50726f6f66206973206e6f742076616c6964000000000000000000000000000081525060200191505060405180910390fd5b6123398133612b43565b6123438787611748565b50505050505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612485576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806147ae6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561250b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061483c6021913960400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fef07b8974749e71f00d3d636be1c93ba08da679f7eaf39bc980ae00df8f5a3686000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6125dd838383612ce9565b6125e78382612f61565b6125f182826130ff565b505050565b61260082826131c6565b61260a82826130ff565b612613816133de565b5050565b61262081612ad1565b612692576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20646f6573206e6f7420657869737400000000000000000000000081525060200191505060405180910390fd5b61273e60118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561272b5780601f106127005761010080835404028352916020019161272b565b820191906000526020600020905b81548152906001019060200180831161270e57829003601f168201915b50505050506127398361342a565b613557565b601260008381526020019081526020016000209080519060200190612764929190614545565b5050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506127966145c5565b61279e61359b565b90508060800151516001865101146127b557600080fd5b6127bd61460c565b6040518060400160405280600081526020016000815250905060008090505b865181101561285357838782815181106127f257fe5b60200260200101511061280457600080fd5b6128448261283f8560800151600185018151811061281e57fe5b60200260200101518a858151811061283257fe5b60200260200101516139e8565b613a7a565b915080806001019150506127dc565b5061287681836080015160008151811061286957fe5b6020026020010151613a7a565b90506128bc8560000151866020015161288e84613b2b565b85604001516128a08a60400151613b2b565b87606001516128b28960000151613b2b565b8960200151613bc5565b6128cc57600193505050506128d4565b600093505050505b92915050565b600081600001549050919050565b60006129098473ffffffffffffffffffffffffffffffffffffffff16613d29565b6129165760019050612ac9565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156129f15780820151818401526020810190506129d6565b50505050905090810190601f168015612a1e5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612a4057600080fd5b505af1158015612a54573d6000803e3d6000fd5b505050506040513d6020811015612a6a57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6015600083815260200190815260200160002060000160009054906101000a900460ff1615612bda576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f536f6c7574696f6e206973206e6f7420756e697175650000000000000000000081525060200191505060405180910390fd5b612bf06001601454613d7490919063ffffffff16565b60148190555060016015600084815260200190815260200160002060000160006101000a81548160ff021916908315150217905550806015600084815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f01d5f9f5a890e5385b4f1d07d3c8c1f739f82bb433ed461d4551b7af3edc63408282604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612d8c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c69642041646472657373000000000000000000000000000000000081525060200191505060405180910390fd5b612d9581611bd5565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612e18576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806147896025913960400191505060405180910390fd5b612e2181613dfc565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612eba600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613eba565b612f01600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613ed0565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612fb96001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613ef390919063ffffffff16565b90506000600760008481526020019081526020016000205490508181146130a6576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061302657fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061307e57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036130f89190614626565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613269576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c69642041646472657373000000000000000000000000000000000081525060200191505060405180910390fd5b61327281612ad1565b156132e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20616c72656164792065786973747300000000000000000000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061337e600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613eba565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415613472576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050613552565b600082905060005b6000821461349c578080600101915050600a828161349457fe5b04915061347a565b6060816040519080825280601f01601f1916602001820160405280156134d15781602001600182028038833980820191505090505b50905060006001830390505b6000861461354a57600a86816134ef57fe5b0660300160f81b8282806001900393508151811061350957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161354257fe5b0495506134dd565b819450505050505b919050565b60606135938383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613f3d565b905092915050565b6135a36145c5565b60405180604001604052807f1936c240636390dc823e3a728e94b208eb53c6756d81da57ec3425e05d43ac1081526020017f2d70ff78e8216bf29d58923a686d9738278b8ce2fd822e197c85b09286d155668152508160000181905250604051806040016040528060405180604001604052807f2b4daf047abe2e7f0b311118c1b963b63695dc0d769cea78849604434de055bf81526020017f29c13ecb6f33dbc4b3b8a02e2e255511ce4c26a8a2f299efcc94caf2de4fce00815250815260200160405180604001604052807f1da9020008df7f549751f8a251af3b2dc4a2ad3e0870de54acaedd9fc1b47e1781526020017f25ea0d7e2b29de431b86a943db30dbf4d98f68df9ca8a9628d14d1591e817d908152508152508160200181905250604051806040016040528060405180604001604052807f011016e22ae045444f50fb80f246ec486c7e02af09132cd38c4fcf484983e4f281526020017ee83c788c2878d1d5eba3ed49b0d81e4c0487dedc3e4d1c2baab5833785b62f815250815260200160405180604001604052807f05eb89e741ed5b5d611cebf92d1ed02cd6f3311089f0d400df7d9ced5a48fd4181526020017f132a90a3b0d369ccd66e2a5ba04a935e44d8ad5dca93a76bba592a578130a9118152508152508160400181905250604051806040016040528060405180604001604052807f065f6a3323a2abffd621fc263f348eb914904b68d5897729ae34a6b9d33f085281526020017f0c3b60f59d3bd50328a04c0ff6d979199685d0526f89f6ac29d6174ce24707a2815250815260200160405180604001604052807f26e7ebce2b44efef6b6315938e33f0a8ecc82dbad635c9efa681ed85bbb5998281526020017f12e0f3721230a0f38f6c9913048d5230fd2615ef3ff7f6ee4b20dfe0bdea1a868152508152508160600181905250600360405190808252806020026020018201604052801561388957816020015b613876614652565b81526020019060019003908161386e5790505b50816080018190525060405180604001604052807f1ef8d5d70234aa3e3d8fc4e3f1ca01c703182580b581106798f05b35fd5082c081526020017f2e468046d4ae35138e2032224925d5389712e5ca5e68f4d9c1e1858e7d65602d81525081608001516000815181106138f857fe5b602002602001018190525060405180604001604052807f0cefae0e3fa6aa25a4485ab7b21d32794d3431a4e4a5ca82ea427b831534c2c981526020017f23e3d2035b70884e547638b111870f5957f58ad8068f7a21470164ad361e1e88815250816080015160018151811061396957fe5b602002602001018190525060405180604001604052807f030ffe78ec3de150e8688db619bde78e21e894754e6be5ed83742677628b24bc81526020017f053392f88cfa9092dfbc0bd199d8159e56207779473c24fc601eff91bcd345ca81525081608001516002815181106139da57fe5b602002602001018190525090565b6139f061460c565b6139f861466c565b836000015181600060038110613a0a57fe5b602002018181525050836020015181600160038110613a2557fe5b6020020181815250508281600260038110613a3c57fe5b602002018181525050600060608360808460076107d05a03fa90508060008114613a6557613a67565bfe5b5080613a7257600080fd5b505092915050565b613a8261460c565b613a8a61468e565b836000015181600060048110613a9c57fe5b602002018181525050836020015181600160048110613ab757fe5b602002018181525050826000015181600260048110613ad257fe5b602002018181525050826020015181600360048110613aed57fe5b602002018181525050600060608360c08460066107d05a03fa90508060008114613b1657613b18565bfe5b5080613b2357600080fd5b505092915050565b613b3361460c565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015613b70575060008360200151145b15613b94576040518060400160405280600081526020016000815250915050613bc0565b60405180604001604052808460000151815260200182856020015181613bb657fe5b0683038152509150505b919050565b600060606004604051908082528060200260200182016040528015613c0457816020015b613bf1614652565b815260200190600190039081613be95790505b50905060606004604051908082528060200260200182016040528015613c4457816020015b613c316146b0565b815260200190600190039081613c295790505b5090508a82600081518110613c5557fe5b60200260200101819052508882600181518110613c6e57fe5b60200260200101819052508682600281518110613c8757fe5b60200260200101819052508482600381518110613ca057fe5b60200260200101819052508981600081518110613cb957fe5b60200260200101819052508781600181518110613cd257fe5b60200260200101819052508581600281518110613ceb57fe5b60200260200101819052508381600381518110613d0457fe5b6020026020010181905250613d1982826141ff565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015613d6b57506000801b8214155b92505050919050565b600080828401905083811015613df2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613eb75760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6001816000016000828254019250508190555050565b613ee860018260000154613ef390919063ffffffff16565b816000018190555050565b6000613f3583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614452565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015613f995781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b885181101561401e57888181518110613fc557fe5b602001015160f81c60f81b838380600101945081518110613fe257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613fb0565b600090505b87518110156140915787818151811061403857fe5b602001015160f81c60f81b83838060010194508151811061405557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050614023565b600090505b8651811015614104578681815181106140ab57fe5b602001015160f81c60f81b8383806001019450815181106140c857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050614096565b600090505b85518110156141775785818151811061411e57fe5b602001015160f81c60f81b83838060010194508151811061413b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050614109565b600090505b84518110156141ea5784818151811061419157fe5b602001015160f81c60f81b8383806001019450815181106141ae57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061417c565b82995050505050505050505095945050505050565b6000815183511461420f57600080fd5b600083519050600060068202905060608160405190808252806020026020018201604052801561424e5781602001602082028038833980820191505090505b50905060008090505b838110156143f45786818151811061426b57fe5b60200260200101516000015182600060068402018151811061428957fe5b6020026020010181815250508681815181106142a157fe5b6020026020010151602001518260016006840201815181106142bf57fe5b6020026020010181815250508581815181106142d757fe5b6020026020010151600001516000600281106142ef57fe5b602002015182600260068402018151811061430657fe5b60200260200101818152505085818151811061431e57fe5b60200260200101516000015160016002811061433657fe5b602002015182600360068402018151811061434d57fe5b60200260200101818152505085818151811061436557fe5b60200260200101516020015160006002811061437d57fe5b602002015182600460068402018151811061439457fe5b6020026020010181815250508581815181106143ac57fe5b6020026020010151602001516001600281106143c457fe5b60200201518260056006840201815181106143db57fe5b6020026020010181815250508080600101915050614257565b506143fd6146d6565b6000602082602086026020860160086107d05a03fa9050806000811461442257614424565bfe5b508061442f57600080fd5b60008260006001811061443e57fe5b602002015114159550505050505092915050565b60008383111582906144ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156144c45780820151818401526020810190506144a9565b50505050905090810190601f1680156144f15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6040518060600160405280614525614652565b81526020016145326146b0565b815260200161453f614652565b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061458657805160ff19168380011785556145b4565b828001600101855582156145b4579182015b828111156145b3578251825591602001919060010190614598565b5b5090506145c191906146f8565b5090565b6040518060a001604052806145d8614652565b81526020016145e56146b0565b81526020016145f26146b0565b81526020016145ff6146b0565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b81548183558181111561464d5781836000526020600020918201910161464c91906146f8565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b60405180604001604052806146c361471d565b81526020016146d061471d565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61471a91905b808211156147165760008160009055506001016146fe565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe6d73672e73656e646572206d75737420626520746865206f776e6572206f662074686520636f6e7472616374206f72206d75737420626520617070726f76656420666f7220616c6c2e41646472657373206973206e6f7420746865206f776e6572206f662074686520746f6b656e43616c6c6572206d757374206265206f776e6572206f662074686520636f6e74726163742e417070726f7665722063616e6e6f7420626520746865206f776e6572206f662074686520746f6b656e537065636966696564207061757365207374617465206d75737420626520646966666572656e74207468616e2063757272656e742070617573652073746174654e6577206f776e6572206d7573742062652061207265616c20616464726573732e43616e6e6f742073657420617070726f76616c20666f7220796f7572206f776e20746f6b656e732ea265627a7a72315820840cee435d95e20e44b43d18dbf8d0a6367ae7ad6804032fdeba3d235776e5db64736f6c63430005100032",
  "sourceMap": "409:1191:3:-;;;578:1;554:25;;18985:242:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;487:10;479:5;;:18;;;;;;;;;;;;;;;;;;512:26;532:5;;;;;;;;;;;512:26;;;;;;;;;;;;;;;;;;;;;;1401:5;1392:6;;:14;;;;;;;;;;;;;;;;;;2602:40;2199:10;2621:20;;2602:18;;;:40;;:::i;:::-;4494;4368:10;4513:20;;4494:18;;;:40;;:::i;:::-;11830:51;11436:10;11849:31;;11830:18;;;:51;;:::i;:::-;19093:4;19085:5;:12;;;;;;;;;;;;:::i;:::-;;19117:6;19107:7;:16;;;;;;;;;;;;:::i;:::-;;19149:12;19133:13;:28;;;;;;;;;;;;:::i;:::-;;19171:49;18796:10;19190:29;;19171:18;;;:49;;:::i;:::-;18985:242;;;20695:10;20687:5;;:18;;;;;;;;;;;;;;;;;;409:1191:3;;2952:182:0;3042:10;3027:25;;:11;:25;;;;;3019:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3123:4;3087:20;:33;3108:11;3087:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;2952:182;:::o;409:1191:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "409:1191:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;409:1191:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2740:133:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2740:133:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5979:115;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5979:115:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5341:436;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5341:436:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;19530:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;19530:89:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1816:309;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1816:309:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;19334:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;19334:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12612:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7115:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7115:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14801:122:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14801:122:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14801:122:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14801:122:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14801:122:2;;;;;;;;;;;;;;;:::i;:::-;;12261:199:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12261:199:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14929:166:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14929:166:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;:::i;:::-;;20876:151:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20876:151:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7334:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7334:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8411:244;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8411:244:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13043:165;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13043:165:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;24041:658:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;24041:658:4;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;24041:658:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;24041:658:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;24041:658:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;24041:658:4;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5012:109:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5012:109:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4819:187;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4819:187:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;837:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6386:257;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6386:257:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7472:233;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7472:233:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7472:233:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7472:233:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7472:233:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7472:233:0;;;;;;;;;;;;;;;:::i;:::-;;19734:101;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;19734:101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19999:175;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;19999:175:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;19999:175:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1106:492:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1106:492:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1106:492:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1106:492:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1106:492:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1106:492:3;;;;;;;;;;;;;;:::i;:::-;;6964:145:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6964:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1079:214;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1079:214:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;2740:133;2810:4;2833:20;:33;2854:11;2833:33;;;;;;;;;;;;;;;;;;;;;;;;;;;2826:40;;2740:133;;;:::o;5979:115::-;6037:7;6063:15;:24;6079:7;6063:24;;;;;;;;;;;;;;;;;;;;;6056:31;;5979:115;;;:::o;5341:436::-;5418:16;5426:7;5418;:16::i;:::-;5412:22;;:2;:22;;;;5404:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5525:16;5533:7;5525;:16::i;:::-;5511:30;;:10;:30;;;:66;;;;5545:32;5562:10;5574:2;5545:16;:32::i;:::-;5511:66;5490:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5714:2;5687:15;:24;5703:7;5687:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;5762:7;5758:2;5731:39;;5740:16;5748:7;5740;:16::i;:::-;5731:39;;;;;;;;;;;;5341:436;;:::o;19530:89::-;19573:13;19605:7;19598:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19530:89;:::o;1816:309::-;604:5;;;;;;;;;;;590:19;;:10;:19;;;582:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1893:6;1883:16;;:6;;;;;;;;;;;:16;;;;1875:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1987:6;1978;;:15;;;;;;;;;;;;;;;;;;2007:6;;;;;;;;;;;2003:116;;;2034:18;2041:10;2034:18;;;;;;;;;;;;;;;;;;;;;;2003:116;;;2088:20;2097:10;2088:20;;;;;;;;;;;;;;;;;;;;;;2003:116;1816:309;:::o;19334:85::-;19375:13;19407:5;19400:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19334:85;:::o;12612:94::-;12656:7;12682:10;:17;;;;12675:24;;12612:94;:::o;7115:213::-;7205:39;7224:10;7236:7;7205:18;:39::i;:::-;7197:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7289:32;7303:4;7309:2;7313:7;7289:13;:32::i;:::-;7115:213;;;:::o;14801:122:2:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:2;;;;14876:10;:40::i;:::-;14801:122;;:::o;12261:199:0:-;12341:7;12376:16;12386:5;12376:9;:16::i;:::-;12368:5;:24;12360:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12427:12;:19;12440:5;12427:19;;;;;;;;;;;;;;;12447:5;12427:26;;;;;;;;;;;;;;;;12420:33;;12261:199;;;;:::o;14929:166:2:-;;;;:::o;20876:151:0:-;604:5;;;;;;;;;;;590:19;;:10;:19;;;582:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1534:6;;;;;;;;;;;1533:7;1525:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20960:24;20972:2;20976:7;20960:11;:24::i;:::-;20994:26;21012:7;20994:17;:26::i;:::-;20876:151;;:::o;7334:132::-;7420:39;7437:4;7443:2;7447:7;7420:39;;;;;;;;;;;;:16;:39::i;:::-;7334:132;;;:::o;8411:244::-;8494:4;8510:13;8526:16;8534:7;8526;:16::i;:::-;8510:32;;8571:5;8560:16;;:7;:16;;;:51;;;;8604:7;8580:31;;:20;8592:7;8580:11;:20::i;:::-;:31;;;8560:51;:87;;;;8615:32;8632:5;8639:7;8615:16;:32::i;:::-;8560:87;8552:96;;;8411:244;;;;:::o;13043:165::-;13101:7;13136:13;:11;:13::i;:::-;13128:5;:21;13120:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13184:10;13195:5;13184:17;;;;;;;;;;;;;;;;13177:24;;13043:165;;;:::o;24041:658:4:-;24205:6;24223:18;;:::i;:::-;24261:27;;;;;;;;24277:1;24279;24277:4;;;;;;;;;;;24261:27;;;;24283:1;24285;24283:4;;;;;;;;;;;24261:27;;;24251:5;:7;;:37;;;;24308:55;;;;;;;;;;;;;;;;24325:1;24327;24325:4;;;;;;;;;;;24330:1;24325:7;;;;;;;;;;;24308:55;;;;24334:1;24336;24334:4;;;;;;;;;;;24339:1;24334:7;;;;;;;;;;;24308:55;;;;;;;;;;;;;;;24345:1;24347;24345:4;;;;;;;;;;;24350:1;24345:7;;;;;;;;;;;24308:55;;;;24354:1;24356;24354:4;;;;;;;;;;;24359:1;24354:7;;;;;;;;;;;24308:55;;;;;;24298:5;:7;;:65;;;;24383:27;;;;;;;;24399:1;24401;24399:4;;;;;;;;;;;24383:27;;;;24405:1;24407;24405:4;;;;;;;;;;;24383:27;;;24373:5;:7;;:37;;;;24420:25;24459:1;24448:13;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;24448:13:4;;;;24420:41;;24484:6;24493:1;24484:10;;24480:88;24500:12;24496:1;:16;24480:88;;;24549:5;24555:1;24549:8;;;;;;;;;;;24532:11;24544:1;24532:14;;;;;;;;;;;;;:25;;;;;24514:3;;;;;;;24480:88;;;;24611:1;24581:26;24588:11;24601:5;24581:6;:26::i;:::-;:31;24577:116;;;24635:4;24628:11;;;;;;24577:116;24677:5;24670:12;;;;24041:658;;;;;;;:::o;5012:109:0:-;5067:7;5093:11;:20;5105:7;5093:20;;;;;;;;;;;;;;;;;;;;;5086:28;;5012:109;;;:::o;4819:187::-;4874:7;4918:1;4901:19;;:5;:19;;;;4893:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4957:42;4974:17;:24;4992:5;4974:24;;;;;;;;;;;;;;;4957:16;:42::i;:::-;4950:49;;4819:187;;;:::o;837:78::-;877:7;903:5;;;;;;;;;;;896:12;;837:78;:::o;6386:257::-;6471:10;6465:16;;:2;:16;;;;6457:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6573:8;6536:18;:30;6555:10;6536:30;;;;;;;;;;;;;;;:34;6567:2;6536:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;6623:2;6596:40;;6611:10;6596:40;;;6627:8;6596:40;;;;;;;;;;;;;;;;;;;;;;6386:257;;:::o;7472:233::-;7578:31;7591:4;7597:2;7601:7;7578:12;:31::i;:::-;7627:48;7650:4;7656:2;7660:7;7669:5;7627:22;:48::i;:::-;7619:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7472:233;;;;:::o;19734:101::-;19783:13;19815;19808:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19734:101;:::o;19999:175::-;20057:13;20090:16;20098:7;20090;:16::i;:::-;20082:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20148:10;:19;20159:7;20148:19;;;;;;;;;;;20141:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19999:175;;;:::o;1106:492:3:-;1323:11;1364:1;1367;1370;1373:6;1347:33;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1347:33:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1347:33:3;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1347:33:3;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1347:33:3;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1347:33:3;;;1337:44;;;;;;1323:58;;1400:15;:20;1416:3;1400:20;;;;;;;;;;;:27;;;;;;;;;;;;1399:28;1391:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1472:25;1481:1;1484;1487;1490:6;1472:8;:25::i;:::-;1464:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1530:28;1542:3;1547:10;1530:11;:28::i;:::-;1568:23;1579:2;1583:7;1568:10;:23::i;:::-;1106:492;;;;;;;:::o;6964:145:0:-;7044:4;7067:18;:25;7086:5;7067:25;;;;;;;;;;;;;;;:35;7093:8;7067:35;;;;;;;;;;;;;;;;;;;;;;;;;7060:42;;6964:145;;;;:::o;1079:214::-;604:5;;;;;;;;;;;590:19;;:10;:19;;;582:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1179:1;1159:22;;:8;:22;;;;1151:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1237:8;1229:5;;:16;;;;;;;;;;;;;;;;;;1260:26;1280:5;;;;;;;;;;;1260:26;;;;;;;;;;;;;;;;;;;;;;1079:214;:::o;13583:239::-;13668:38;13688:4;13694:2;13698:7;13668:19;:38::i;:::-;13717:47;13750:4;13756:7;13717:32;:47::i;:::-;13775:40;13803:2;13807:7;13775:27;:40::i;:::-;13583:239;;;:::o;14077:196::-;14140:24;14152:2;14156:7;14140:11;:24::i;:::-;14175:40;14203:2;14207:7;14175:27;:40::i;:::-;14226;14258:7;14226:31;:40::i;:::-;14077:196;;:::o;20299:188::-;20364:16;20372:7;20364;:16::i;:::-;20356:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20437:43;20447:13;20437:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20462:17;20471:7;20462:8;:17::i;:::-;20437:9;:43::i;:::-;20415:10;:19;20426:7;20415:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;20299:188;:::o;23115:921:4:-;23195:4;23211:26;23240:77;23211:106;;23327:22;;:::i;:::-;23352:14;:12;:14::i;:::-;23327:39;;23404:2;:12;;;:19;23399:1;23384:5;:12;:16;:39;23376:48;;;;;;23481:27;;:::i;:::-;23511:21;;;;;;;;23527:1;23511:21;;;;23530:1;23511:21;;;23481:51;;23547:6;23556:1;23547:10;;23542:197;23563:5;:12;23559:1;:16;23542:197;;;23615:18;23604:5;23610:1;23604:8;;;;;;;;;;;;;;:29;23596:38;;;;;;23655:73;23672:4;23678:49;23697:2;:12;;;23714:1;23710;:5;23697:19;;;;;;;;;;;;;;23718:5;23724:1;23718:8;;;;;;;;;;;;;;23678:18;:49::i;:::-;23655:16;:73::i;:::-;23648:80;;23577:3;;;;;;;23542:197;;;;23755:39;23772:4;23778:2;:12;;;23791:1;23778:15;;;;;;;;;;;;;;23755:16;:39::i;:::-;23748:46;;23808:193;23843:5;:7;;;23852:5;:7;;;23874:20;23889:4;23874:14;:20::i;:::-;23896:2;:8;;;23919:23;23934:5;:7;;;23919:14;:23::i;:::-;23944:2;:8;;;23967:24;23982:2;:8;;;23967:14;:24::i;:::-;23993:2;:7;;;23808:20;:193::i;:::-;23804:207;;24010:1;24003:8;;;;;;;23804:207;24028:1;24021:8;;;;;23115:921;;;;;:::o;1065:112:5:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;10281:347:0:-;10402:4;10427:15;:2;:13;;;:15::i;:::-;10422:58;;10465:4;10458:11;;;;10422:58;10490:13;10522:2;10506:36;;;10543:10;10555:4;10561:7;10570:5;10506:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10506:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10506:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10506:70:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10506:70:0;;;;;;;;;;;;;;;;10490:86;;3501:10;10604:16;;10594:26;;;:6;:26;;;;10586:35;;;10281:347;;;;;;;:::o;7899:152::-;7956:4;7972:13;7988:11;:20;8000:7;7988:20;;;;;;;;;;;;;;;;;;;;;7972:36;;8042:1;8025:19;;:5;:19;;;;8018:26;;;7899:152;;;:::o;708:392:3:-;803:15;:28;819:11;803:28;;;;;;;;;;;:35;;;;;;;;;;;;802:36;794:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;891:20;909:1;891:13;;:17;;:20;;;;:::i;:::-;875:13;:36;;;;959:4;921:15;:28;937:11;921:28;;;;;;;;;;;:35;;;:42;;;;;;;;;;;;;;;;;;1020:15;973;:28;989:11;973:28;;;;;;;;;;;:44;;;:62;;;;;;;;;;;;;;;;;;1050:43;1064:11;1077:15;1050:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;708:392;;:::o;9319:434:0:-;9426:1;9412:16;;:2;:16;;;;9404:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9474:16;9482:7;9474;:16::i;:::-;9466:24;;:4;:24;;;9458:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9542:23;9557:7;9542:14;:23::i;:::-;9598:2;9575:11;:20;9587:7;9575:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9610:41;9629:17;:21;9647:2;9629:21;;;;;;;;;;;;;;;9610:18;:41::i;:::-;9661:43;9680:17;:23;9698:4;9680:23;;;;;;;;;;;;;;;9661:18;:43::i;:::-;9738:7;9734:2;9719:27;;9728:4;9719:27;;;;;;;;;;;;9319:434;;;:::o;16049:1128::-;16311:22;16336:32;16366:1;16336:12;:18;16349:4;16336:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;16311:57;;16378:18;16399:17;:26;16417:7;16399:26;;;;;;;;;;;;16378:47;;16543:14;16529:10;:28;16525:323;;16573:19;16595:12;:18;16608:4;16595:18;;;;;;;;;;;;;;;16614:14;16595:34;;;;;;;;;;;;;;;;16573:56;;16677:11;16644:12;:18;16657:4;16644:18;;;;;;;;;;;;;;;16663:10;16644:30;;;;;;;;;;;;;;;:44;;;;16793:10;16760:17;:30;16778:11;16760:30;;;;;;;;;;;:43;;;;16525:323;;16934:12;:18;16947:4;16934:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;16049:1128;;;;:::o;14895:183::-;15008:12;:16;15021:2;15008:16;;;;;;;;;;;;;;;:23;;;;14979:17;:26;14997:7;14979:26;;;;;;;;;;;:52;;;;15041:12;:16;15054:2;15041:16;;;;;;;;;;;;;;;15063:7;15041:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15041:30:0;;;;;;;;;;;;;;;;;;;;;;14895:183;;:::o;8812:308::-;8897:1;8883:16;;:2;:16;;;;8875:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8938:16;8946:7;8938;:16::i;:::-;8937:17;8929:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9012:2;8989:11;:20;9001:7;8989:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9024:41;9043:17;:21;9061:2;9043:21;;;;;;;;;;;;;;;9024:18;:41::i;:::-;9105:7;9101:2;9080:33;;9097:1;9080:33;;;;;;;;;;;;8812:308;;:::o;15273:161::-;15376:10;:17;;;;15349:15;:24;15365:7;15349:24;;;;;;;;;;;:44;;;;15403:10;15419:7;15403:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15403:24:0;;;;;;;;;;;;;;;;;;;;;;15273:161;:::o;43271:465:2:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:2;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;21159:1951:4:-;21206:22;;:::i;:::-;21251:169;;;;;;;;21275:66;21251:169;;;;21352:66;21251:169;;;21240:2;:8;;:180;;;;21440:327;;;;;;;;;;;;;;;;21465:66;21440:327;;;;21542:66;21440:327;;;;;;;;;;;;;;;21621:66;21440:327;;;;21698:66;21440:327;;;;;;21430:2;:7;;:337;;;;21788:327;;;;;;;;;;;;;;;;21813:66;21788:327;;;;21890:66;21788:327;;;;;;;;;;;;;;;21969:66;21788:327;;;;22046:66;21788:327;;;;;;21777:2;:8;;:338;;;;22136:327;;;;;;;;;;;;;;;;22161:66;22136:327;;;;22238:66;22136:327;;;;;;;;;;;;;;;22317:66;22136:327;;;;22394:66;22136:327;;;;;;22125:2;:8;;:338;;;;22510:1;22488:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22473:2;:12;;:39;;;;22540:169;;;;;;;;22564:66;22540:169;;;;22641:66;22540:169;;;22522:2;:12;;;22535:1;22522:15;;;;;;;;;;;;;:187;;;;22737:169;;;;;;;;22761:66;22737:169;;;;22838:66;22737:169;;;22719:2;:12;;;22732:1;22719:15;;;;;;;;;;;;;:187;;;;22934:169;;;;;;;;22958:66;22934:169;;;;23035:66;22934:169;;;22916:2;:12;;;22929:1;22916:15;;;;;;;;;;;;;:187;;;;21159:1951;:::o;17660:454::-;17729:16;;:::i;:::-;17757:20;;:::i;:::-;17798:1;:3;;;17787:5;17793:1;17787:8;;;;;;;;;;:14;;;;;17822:1;:3;;;17811:5;17817:1;17811:8;;;;;;;;;;:14;;;;;17846:1;17835:5;17841:1;17835:8;;;;;;;;;;:12;;;;;17857;17961:4;17958:1;17952:4;17945:5;17942:1;17935:4;17928:5;17924:16;17913:53;17902:64;;18043:7;18056:1;18051:20;;;;18036:35;;18051:20;18060:9;18036:35;;18099:7;18090:17;;;;;;17660:454;;;;;;:::o;16729:493::-;16808:16;;:::i;:::-;16836:20;;:::i;:::-;16877:2;:4;;;16866:5;16872:1;16866:8;;;;;;;;;;:15;;;;;16902:2;:4;;;16891:5;16897:1;16891:8;;;;;;;;;;:15;;;;;16927:2;:4;;;16916:5;16922:1;16916:8;;;;;;;;;;:15;;;;;16952:2;:4;;;16941:5;16947:1;16941:8;;;;;;;;;;:15;;;;;16966:12;17070:4;17067:1;17061:4;17054:5;17051:1;17044:4;17037:5;17033:16;17022:53;17011:64;;17152:7;17165:1;17160:20;;;;17145:35;;17160:20;17169:9;17145:35;;17207:7;17199:16;;;;;;16729:493;;;;;;:::o;16338:340::-;16395:14;;:::i;:::-;16473:6;16482:77;16473:86;;16580:1;16573;:3;;;:8;:20;;;;;16592:1;16585;:3;;;:8;16573:20;16569:58;;;16614:13;;;;;;;;16622:1;16614:13;;;;16625:1;16614:13;;;16607:20;;;;;16569:58;16644:27;;;;;;;;16652:1;:3;;;16644:27;;;;16668:1;16662;:3;;;:7;;;;;;16657:1;:13;16644:27;;;16637:34;;;16338:340;;;;:::o;20256:552::-;20507:4;20523:19;20559:1;20545:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20523:38;;20571:19;20607:1;20593:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20571:38;;20627:2;20619;20622:1;20619:5;;;;;;;;;;;;;:10;;;;20647:2;20639;20642:1;20639:5;;;;;;;;;;;;;:10;;;;20667:2;20659;20662:1;20659:5;;;;;;;;;;;;;:10;;;;20687:2;20679;20682:1;20679:5;;;;;;;;;;;;;:10;;;;20707:2;20699;20702:1;20699:5;;;;;;;;;;;;;:10;;;;20727:2;20719;20722:1;20719:5;;;;;;;;;;;;;:10;;;;20747:2;20739;20742:1;20739:5;;;;;;;;;;;;;:10;;;;20767:2;20759;20762:1;20759:5;;;;;;;;;;;;;:10;;;;20786:15;20794:2;20798;20786:7;:15::i;:::-;20779:22;;;;20256:552;;;;;;;;;;:::o;686:610:8:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;834:176:6:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;10709:171:0:-;10808:1;10772:38;;:15;:24;10788:7;10772:24;;;;;;;;;;;;;;;;;;;;;:38;;;10768:106;;10861:1;10826:15;:24;10842:7;10826:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;10768:106;10709:171;:::o;1183:178:5:-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1367:108::-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1274:134:6:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:2:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:2;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;18325:923:4:-;18407:4;18444:2;:9;18431:2;:9;:22;18423:31;;;;;;18464:13;18480:2;:9;18464:25;;18499:14;18527:1;18516:8;:12;18499:29;;18538:19;18571:9;18560:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18560:21:4;;;;18538:43;;18596:6;18605:1;18596:10;;18591:307;18612:8;18608:1;:12;18591:307;;;18668:2;18671:1;18668:5;;;;;;;;;;;;;;:7;;;18649:5;18663:1;18659;18655;:5;:9;18649:16;;;;;;;;;;;;;:26;;;;;18708:2;18711:1;18708:5;;;;;;;;;;;;;;:7;;;18689:5;18703:1;18699;18695;:5;:9;18689:16;;;;;;;;;;;;;:26;;;;;18748:2;18751:1;18748:5;;;;;;;;;;;;;;:7;;;18756:1;18748:10;;;;;;;;;;;18729:5;18743:1;18739;18735;:5;:9;18729:16;;;;;;;;;;;;;:29;;;;;18791:2;18794:1;18791:5;;;;;;;;;;;;;;:7;;;18799:1;18791:10;;;;;;;;;;;18772:5;18786:1;18782;18778;:5;:9;18772:16;;;;;;;;;;;;;:29;;;;;18834:2;18837:1;18834:5;;;;;;;;;;;;;;:7;;;18842:1;18834:10;;;;;;;;;;;18815:5;18829:1;18825;18821;:5;:9;18815:16;;;;;;;;;;;;;:29;;;;;18877:2;18880:1;18877:5;;;;;;;;;;;;;;:7;;;18885:1;18877:10;;;;;;;;;;;18858:5;18872:1;18868;18864;:5;:9;18858:16;;;;;;;;;;;;;:29;;;;;18622:3;;;;;;;18591:307;;;;18907:18;;:::i;:::-;18935:12;19068:4;19063:3;19056:4;19045:9;19041:20;19034:4;19027:5;19023:16;19020:1;19013:4;19006:5;19002:16;18991:82;18980:93;;19150:7;19163:1;19158:20;;;;19143:35;;19158:20;19167:9;19143:35;;19205:7;19197:16;;;;;;19240:1;19230:3;19234:1;19230:6;;;;;;;;;;;:11;;19223:18;;;;;;;18325:923;;;;:::o;1732:187:6:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;409:1191:3:-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;409:1191:3;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;409:1191:3;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;409:1191:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;409:1191:3;;;;:::o",
  "source": "// Solution Square Verifier\npragma solidity >=0.4.21 <0.6.0;\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\nimport \"./ERC721Mintable.sol\";\nimport \"./Verifier.sol\";\nimport './../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol';\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is ERC721Mintable, Verifier {\n\n    struct Solution {\n        bool isUsed;\n        address verifierAddress;\n    }\n    uint256 solutionCount = 0;\n    mapping(bytes32 => Solution) private uniqueSolutions;\n\n    event SolutionAdded(bytes32 key, address verifierAddress);\n\n    function addSolution(bytes32 solutionKey, address verifierAddress) internal {\n        require(!uniqueSolutions[solutionKey].isUsed, \"Solution is not unique\");\n        solutionCount = solutionCount.add(1);\n        uniqueSolutions[solutionKey].isUsed = true;\n        uniqueSolutions[solutionKey].verifierAddress = verifierAddress;\n        emit SolutionAdded(solutionKey, verifierAddress);\n    }\n\n    function mintVerify\n    (\n        address to,\n        uint256 tokenId,\n        uint256[2] memory a,\n        uint256[2][2] memory b,\n        uint256[2] memory c,\n        uint256[2] memory inputs\n    ) public {\n        bytes32 key = keccak256(abi.encodePacked(a, b, c, inputs));\n        require(!uniqueSolutions[key].isUsed, \"Solution is not unique\");\n        require(verifyTx(a, b, c, inputs), \"Proof is not valid\");\n        addSolution(key, msg.sender);\n        super.mint(to, tokenId);\n    }\n}",
  "sourcePath": "/home/artur/Documents/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/home/artur/Documents/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7616
      ]
    },
    "id": 7617,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7477,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "28:32:3"
      },
      {
        "absolutePath": "/home/artur/Documents/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7478,
        "nodeType": "ImportDirective",
        "scope": 7617,
        "sourceUnit": 1151,
        "src": "169:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artur/Documents/Blockchain-Capstone/eth-contracts/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7479,
        "nodeType": "ImportDirective",
        "scope": 7617,
        "sourceUnit": 10167,
        "src": "200:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artur/Documents/Blockchain-Capstone/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "./../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 7480,
        "nodeType": "ImportDirective",
        "scope": 7617,
        "sourceUnit": 10403,
        "src": "225:80:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7481,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1150,
              "src": "440:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$1150",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 7482,
            "nodeType": "InheritanceSpecifier",
            "src": "440:14:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7483,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10166,
              "src": "456:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10166",
                "typeString": "contract Verifier"
              }
            },
            "id": 7484,
            "nodeType": "InheritanceSpecifier",
            "src": "456:8:3"
          }
        ],
        "contractDependencies": [
          71,
          144,
          191,
          697,
          997,
          1108,
          1150,
          7475,
          10166
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7616,
        "linearizedBaseContracts": [
          7616,
          10166,
          1150,
          1108,
          7475,
          997,
          697,
          191,
          144,
          71
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7489,
            "members": [
              {
                "constant": false,
                "id": 7486,
                "name": "isUsed",
                "nodeType": "VariableDeclaration",
                "scope": 7489,
                "src": "498:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7485,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "498:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7488,
                "name": "verifierAddress",
                "nodeType": "VariableDeclaration",
                "scope": 7489,
                "src": "519:23:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7487,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "519:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7616,
            "src": "472:77:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7492,
            "name": "solutionCount",
            "nodeType": "VariableDeclaration",
            "scope": 7616,
            "src": "554:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7490,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "554:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7491,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "578:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7496,
            "name": "uniqueSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7616,
            "src": "585:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7489_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7495,
              "keyType": {
                "id": 7493,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "593:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "585:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7489_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7494,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7489,
                "src": "604:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7489_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7502,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7498,
                  "indexed": false,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7502,
                  "src": "664:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7497,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7500,
                  "indexed": false,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7502,
                  "src": "677:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "677:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "663:38:3"
            },
            "src": "644:58:3"
          },
          {
            "body": {
              "id": 7544,
              "nodeType": "Block",
              "src": "784:316:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "802:36:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7510,
                              "name": "uniqueSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7496,
                              "src": "803:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7489_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7512,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7511,
                              "name": "solutionKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7504,
                              "src": "819:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "803:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7489_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7513,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isUsed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7486,
                          "src": "803:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e206973206e6f7420756e69717565",
                        "id": 7515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "840:24:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                          "typeString": "literal_string \"Solution is not unique\""
                        },
                        "value": "Solution is not unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                          "typeString": "literal_string \"Solution is not unique\""
                        }
                      ],
                      "id": 7509,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10511,
                        10512
                      ],
                      "referencedDeclaration": 10512,
                      "src": "794:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "794:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7517,
                  "nodeType": "ExpressionStatement",
                  "src": "794:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7518,
                      "name": "solutionCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7492,
                      "src": "875:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 7521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "909:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 7519,
                          "name": "solutionCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7492,
                          "src": "891:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10242,
                        "src": "891:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "891:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "875:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7524,
                  "nodeType": "ExpressionStatement",
                  "src": "875:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7525,
                          "name": "uniqueSolutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7496,
                          "src": "921:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7489_storage_$",
                            "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7527,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7526,
                          "name": "solutionKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7504,
                          "src": "937:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "921:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7489_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7528,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isUsed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7486,
                      "src": "921:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "959:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "921:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7531,
                  "nodeType": "ExpressionStatement",
                  "src": "921:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7532,
                          "name": "uniqueSolutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7496,
                          "src": "973:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7489_storage_$",
                            "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7534,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7533,
                          "name": "solutionKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7504,
                          "src": "989:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "973:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7489_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7535,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "verifierAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7488,
                      "src": "973:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7536,
                      "name": "verifierAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7506,
                      "src": "1020:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "973:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7538,
                  "nodeType": "ExpressionStatement",
                  "src": "973:62:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7540,
                        "name": "solutionKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7504,
                        "src": "1064:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7541,
                        "name": "verifierAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7506,
                        "src": "1077:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7539,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7502,
                      "src": "1050:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1050:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7543,
                  "nodeType": "EmitStatement",
                  "src": "1045:48:3"
                }
              ]
            },
            "documentation": null,
            "id": 7545,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7504,
                  "name": "solutionKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 7545,
                  "src": "729:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7503,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7506,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7545,
                  "src": "750:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "728:46:3"
            },
            "returnParameters": {
              "id": 7508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "784:0:3"
            },
            "scope": 7616,
            "src": "708:392:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7614,
              "nodeType": "Block",
              "src": "1313:285:3",
              "statements": [
                {
                  "assignments": [
                    7571
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7571,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7614,
                      "src": "1323:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7570,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1323:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7581,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7575,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7553,
                            "src": "1364:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7576,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7559,
                            "src": "1367:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7577,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7563,
                            "src": "1370:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7578,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7567,
                            "src": "1373:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7573,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10495,
                            "src": "1347:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1347:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1347:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7572,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10502,
                      "src": "1337:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1337:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1323:58:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1399:28:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7583,
                              "name": "uniqueSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7496,
                              "src": "1400:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7489_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7585,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7584,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7571,
                              "src": "1416:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1400:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7489_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7586,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isUsed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7486,
                          "src": "1400:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e206973206e6f7420756e69717565",
                        "id": 7588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1429:24:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                          "typeString": "literal_string \"Solution is not unique\""
                        },
                        "value": "Solution is not unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                          "typeString": "literal_string \"Solution is not unique\""
                        }
                      ],
                      "id": 7582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10511,
                        10512
                      ],
                      "referencedDeclaration": 10512,
                      "src": "1391:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1391:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7590,
                  "nodeType": "ExpressionStatement",
                  "src": "1391:63:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7593,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7553,
                            "src": "1481:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7594,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7559,
                            "src": "1484:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7595,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7563,
                            "src": "1487:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7596,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7567,
                            "src": "1490:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "id": 7592,
                          "name": "verifyTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10165,
                          "src": "1472:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) view returns (bool)"
                          }
                        },
                        "id": 7597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1472:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f6f66206973206e6f742076616c6964",
                        "id": 7598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1499:20:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_627311e9f23e710f0159ab908e296b4ddc838b15666578fbf8ab092285383469",
                          "typeString": "literal_string \"Proof is not valid\""
                        },
                        "value": "Proof is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_627311e9f23e710f0159ab908e296b4ddc838b15666578fbf8ab092285383469",
                          "typeString": "literal_string \"Proof is not valid\""
                        }
                      ],
                      "id": 7591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10511,
                        10512
                      ],
                      "referencedDeclaration": 10512,
                      "src": "1464:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7600,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7602,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7571,
                        "src": "1542:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7603,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10508,
                          "src": "1547:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1547:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7601,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7545,
                      "src": "1530:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1530:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7606,
                  "nodeType": "ExpressionStatement",
                  "src": "1530:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7610,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7547,
                        "src": "1579:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7611,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7549,
                        "src": "1583:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7607,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10563,
                        "src": "1568:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7616",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1149,
                      "src": "1568:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1568:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7613,
                  "nodeType": "ExpressionStatement",
                  "src": "1568:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 7615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintVerify",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7547,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1140:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7549,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1160:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1160:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7553,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1185:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7550,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1185:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7552,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1193:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1185:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7559,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1214:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7554,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1214:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7556,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1222:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1214:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7558,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1225:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1214:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7563,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1246:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7560,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1246:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7562,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1254:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1246:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7567,
                  "name": "inputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1275:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7564,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1275:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7566,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1283:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1275:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1130:175:3"
            },
            "returnParameters": {
              "id": 7569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1313:0:3"
            },
            "scope": 7616,
            "src": "1106:492:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7617,
        "src": "409:1191:3"
      }
    ],
    "src": "28:1572:3"
  },
  "legacyAST": {
    "absolutePath": "/home/artur/Documents/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7616
      ]
    },
    "id": 7617,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7477,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "28:32:3"
      },
      {
        "absolutePath": "/home/artur/Documents/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7478,
        "nodeType": "ImportDirective",
        "scope": 7617,
        "sourceUnit": 1151,
        "src": "169:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artur/Documents/Blockchain-Capstone/eth-contracts/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7479,
        "nodeType": "ImportDirective",
        "scope": 7617,
        "sourceUnit": 10167,
        "src": "200:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artur/Documents/Blockchain-Capstone/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "./../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 7480,
        "nodeType": "ImportDirective",
        "scope": 7617,
        "sourceUnit": 10403,
        "src": "225:80:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7481,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1150,
              "src": "440:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$1150",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 7482,
            "nodeType": "InheritanceSpecifier",
            "src": "440:14:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7483,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10166,
              "src": "456:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10166",
                "typeString": "contract Verifier"
              }
            },
            "id": 7484,
            "nodeType": "InheritanceSpecifier",
            "src": "456:8:3"
          }
        ],
        "contractDependencies": [
          71,
          144,
          191,
          697,
          997,
          1108,
          1150,
          7475,
          10166
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7616,
        "linearizedBaseContracts": [
          7616,
          10166,
          1150,
          1108,
          7475,
          997,
          697,
          191,
          144,
          71
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7489,
            "members": [
              {
                "constant": false,
                "id": 7486,
                "name": "isUsed",
                "nodeType": "VariableDeclaration",
                "scope": 7489,
                "src": "498:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7485,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "498:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7488,
                "name": "verifierAddress",
                "nodeType": "VariableDeclaration",
                "scope": 7489,
                "src": "519:23:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7487,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "519:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7616,
            "src": "472:77:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7492,
            "name": "solutionCount",
            "nodeType": "VariableDeclaration",
            "scope": 7616,
            "src": "554:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7490,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "554:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7491,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "578:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7496,
            "name": "uniqueSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7616,
            "src": "585:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7489_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7495,
              "keyType": {
                "id": 7493,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "593:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "585:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7489_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7494,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7489,
                "src": "604:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7489_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7502,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7498,
                  "indexed": false,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7502,
                  "src": "664:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7497,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7500,
                  "indexed": false,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7502,
                  "src": "677:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "677:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "663:38:3"
            },
            "src": "644:58:3"
          },
          {
            "body": {
              "id": 7544,
              "nodeType": "Block",
              "src": "784:316:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "802:36:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7510,
                              "name": "uniqueSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7496,
                              "src": "803:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7489_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7512,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7511,
                              "name": "solutionKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7504,
                              "src": "819:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "803:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7489_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7513,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isUsed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7486,
                          "src": "803:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e206973206e6f7420756e69717565",
                        "id": 7515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "840:24:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                          "typeString": "literal_string \"Solution is not unique\""
                        },
                        "value": "Solution is not unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                          "typeString": "literal_string \"Solution is not unique\""
                        }
                      ],
                      "id": 7509,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10511,
                        10512
                      ],
                      "referencedDeclaration": 10512,
                      "src": "794:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "794:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7517,
                  "nodeType": "ExpressionStatement",
                  "src": "794:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7518,
                      "name": "solutionCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7492,
                      "src": "875:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 7521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "909:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 7519,
                          "name": "solutionCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7492,
                          "src": "891:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10242,
                        "src": "891:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "891:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "875:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7524,
                  "nodeType": "ExpressionStatement",
                  "src": "875:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7525,
                          "name": "uniqueSolutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7496,
                          "src": "921:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7489_storage_$",
                            "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7527,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7526,
                          "name": "solutionKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7504,
                          "src": "937:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "921:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7489_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7528,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isUsed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7486,
                      "src": "921:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "959:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "921:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7531,
                  "nodeType": "ExpressionStatement",
                  "src": "921:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7532,
                          "name": "uniqueSolutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7496,
                          "src": "973:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7489_storage_$",
                            "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7534,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7533,
                          "name": "solutionKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7504,
                          "src": "989:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "973:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7489_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7535,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "verifierAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7488,
                      "src": "973:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7536,
                      "name": "verifierAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7506,
                      "src": "1020:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "973:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7538,
                  "nodeType": "ExpressionStatement",
                  "src": "973:62:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7540,
                        "name": "solutionKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7504,
                        "src": "1064:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7541,
                        "name": "verifierAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7506,
                        "src": "1077:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7539,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7502,
                      "src": "1050:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1050:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7543,
                  "nodeType": "EmitStatement",
                  "src": "1045:48:3"
                }
              ]
            },
            "documentation": null,
            "id": 7545,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7504,
                  "name": "solutionKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 7545,
                  "src": "729:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7503,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7506,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7545,
                  "src": "750:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "728:46:3"
            },
            "returnParameters": {
              "id": 7508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "784:0:3"
            },
            "scope": 7616,
            "src": "708:392:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7614,
              "nodeType": "Block",
              "src": "1313:285:3",
              "statements": [
                {
                  "assignments": [
                    7571
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7571,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7614,
                      "src": "1323:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7570,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1323:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7581,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7575,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7553,
                            "src": "1364:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7576,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7559,
                            "src": "1367:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7577,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7563,
                            "src": "1370:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7578,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7567,
                            "src": "1373:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7573,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10495,
                            "src": "1347:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1347:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1347:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7572,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10502,
                      "src": "1337:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1337:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1323:58:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1399:28:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7583,
                              "name": "uniqueSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7496,
                              "src": "1400:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7489_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7585,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7584,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7571,
                              "src": "1416:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1400:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7489_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7586,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isUsed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7486,
                          "src": "1400:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e206973206e6f7420756e69717565",
                        "id": 7588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1429:24:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                          "typeString": "literal_string \"Solution is not unique\""
                        },
                        "value": "Solution is not unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f862245219e1b7d17340e15d76bf71ae45b4eb718df2620d5c3ed2687c882460",
                          "typeString": "literal_string \"Solution is not unique\""
                        }
                      ],
                      "id": 7582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10511,
                        10512
                      ],
                      "referencedDeclaration": 10512,
                      "src": "1391:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1391:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7590,
                  "nodeType": "ExpressionStatement",
                  "src": "1391:63:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7593,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7553,
                            "src": "1481:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7594,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7559,
                            "src": "1484:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7595,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7563,
                            "src": "1487:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7596,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7567,
                            "src": "1490:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "id": 7592,
                          "name": "verifyTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10165,
                          "src": "1472:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) view returns (bool)"
                          }
                        },
                        "id": 7597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1472:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f6f66206973206e6f742076616c6964",
                        "id": 7598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1499:20:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_627311e9f23e710f0159ab908e296b4ddc838b15666578fbf8ab092285383469",
                          "typeString": "literal_string \"Proof is not valid\""
                        },
                        "value": "Proof is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_627311e9f23e710f0159ab908e296b4ddc838b15666578fbf8ab092285383469",
                          "typeString": "literal_string \"Proof is not valid\""
                        }
                      ],
                      "id": 7591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10511,
                        10512
                      ],
                      "referencedDeclaration": 10512,
                      "src": "1464:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7600,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7602,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7571,
                        "src": "1542:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7603,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10508,
                          "src": "1547:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1547:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7601,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7545,
                      "src": "1530:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1530:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7606,
                  "nodeType": "ExpressionStatement",
                  "src": "1530:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7610,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7547,
                        "src": "1579:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7611,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7549,
                        "src": "1583:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7607,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10563,
                        "src": "1568:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7616",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1149,
                      "src": "1568:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1568:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7613,
                  "nodeType": "ExpressionStatement",
                  "src": "1568:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 7615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintVerify",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7547,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1140:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7549,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1160:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1160:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7553,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1185:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7550,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1185:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7552,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1193:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1185:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7559,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1214:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7554,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1214:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7556,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1222:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1214:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7558,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1225:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1214:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7563,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1246:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7560,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1246:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7562,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1254:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1246:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7567,
                  "name": "inputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1275:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7564,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1275:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7566,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1283:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1275:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1130:175:3"
            },
            "returnParameters": {
              "id": 7569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1313:0:3"
            },
            "scope": 7616,
            "src": "1106:492:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7617,
        "src": "409:1191:3"
      }
    ],
    "src": "28:1572:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.0",
  "updatedAt": "2020-10-16T18:14:26.695Z",
  "devdoc": {
    "methods": {
      "_isApprovedOrOwner(address,uint256)": {
        "details": "Returns whether the given spender can transfer a given token ID",
        "params": {
          "spender": "address of the spender to query",
          "tokenId": "uint256 ID of the token to be transferred"
        },
        "return": "bool whether the msg.sender is approved for the given token ID, is an operator of the owner, or is the owner of the token"
      },
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID",
        "params": {
          "to": "address that is approved to transfer token",
          "tokenId": "uint256 that you would like to set approval for"
        }
      },
      "getApproved(uint256)": {
        "details": "Get approved address for a given token",
        "params": {
          "tokenId": "uint256 of the token to get approved address for"
        },
        "return": "address which can transfer the given token"
      },
      "getBaseTokenURI()": {
        "details": "Get the base URI of the token",
        "return": "String of the base URI of the token"
      },
      "getName()": {
        "details": "Get the name of the token",
        "return": "String of the name of the token"
      },
      "getOwner()": {
        "details": "Gets the address of the contract owner",
        "return": "address of the contract owner"
      },
      "getSymbol()": {
        "details": "Get the symbol of the token",
        "return": "String of the symbol of the token"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mint(address,uint256)": {
        "details": "Mint new token",
        "params": {
          "to": "address of the owner of the newly minted token",
          "tokenId": "id of the newly minted token"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "setPaused(bool)": {
        "details": "Pause or Unpause the contract",
        "params": {
          "status": "The pause state you would like the contract to be in"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Get the URI of the token",
        "params": {
          "tokenId": "as uint256 that you want the URI for"
        },
        "return": "String of the URI of the token"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferOwnership(address)": {
        "details": "Transfer ownership of the contract to a new owner",
        "params": {
          "newOwner": "address which you want to transfer contract ownership to"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}